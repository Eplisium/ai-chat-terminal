{
    "tools": {
        "search": {
            "enabled": true,
            "description": "Perform web searches and return formatted results.",
            "implementation": "search_tool.py",
            "parameters": {
                "type": "object",
                "properties": {
                    "query": {
                        "type": "string",
                        "description": "The search query to execute"
                    },
                    "num_results": {
                        "type": "integer",
                        "description": "Number of results to return (optional)",
                        "default": 5,
                        "minimum": 1
                    }
                },
                "required": [
                    "query"
                ]
            }
        },
        "calculate": {
            "enabled": true,
            "description": "Evaluate mathematical expressions safely using supported arithmetic operations.",
            "implementation": "calculate_tool.py",
            "parameters": {
                "type": "object",
                "properties": {
                    "expression": {
                        "type": "string",
                        "description": "The mathematical expression to evaluate (supports +, -, *, /, ** operators)"
                    }
                },
                "required": [
                    "expression"
                ]
            }
        },
        "time": {
            "enabled": true,
            "description": "Get current time and date information for a specified timezone.",
            "implementation": "time_tool.py",
            "parameters": {
                "type": "object",
                "properties": {
                    "timezone": {
                        "type": "string",
                        "description": "The timezone name from pytz database (e.g., 'America/New_York', 'Europe/London')",
                        "default": "UTC"
                    }
                },
                "required": []
            }
        },
        "weather": {
            "enabled": true,
            "description": "Get current weather information for a specified location.",
            "implementation": "weather_tool.py",
            "parameters": {
                "type": "object",
                "properties": {
                    "location": {
                        "type": "string",
                        "description": "The location to get weather information for"
                    },
                    "units": {
                        "type": "string",
                        "description": "The units system for temperature and measurements",
                        "enum": [
                            "metric",
                            "imperial"
                        ],
                        "default": "metric"
                    }
                },
                "required": [
                    "location"
                ]
            }
        },
        "system": {
            "enabled": true,
            "description": "Get system information about OS, memory, disk usage, or CPU details.",
            "implementation": "system_tool.py",
            "parameters": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "description": "The type of system information to retrieve",
                        "enum": [
                            "os",
                            "memory",
                            "disk",
                            "cpu",
                            "all"
                        ],
                        "default": "all"
                    },
                    "path": {
                        "type": "string",
                        "description": "The specific path to get disk information for (only used with type='disk')"
                    }
                },
                "required": []
            }
        },
        "fileops": {
            "enabled": true,
            "description": "Execute file operations tool for browsing and managing files",
            "implementation": "fileops_tool.py",
            "parameters": {
                "type": "object",
                "properties": {
                    "operation": {
                        "type": "string",
                        "description": "Operation to perform (info, list, exists, find, size, create, delete, copy, move, write, read, search)",
                        "enum": ["info", "list", "exists", "find", "size", "create", "delete", "copy", "move", "write", "read", "search"]
                    },
                    "path": {
                        "type": "string",
                        "description": "Target path for the operation"
                    },
                    "detailed": {
                        "type": "boolean",
                        "description": "Get detailed information (for info operation)",
                        "default": false
                    },
                    "recursive": {
                        "type": "boolean",
                        "description": "List subdirectories recursively (for list/find operations)",
                        "default": false
                    },
                    "pattern": {
                        "type": "string",
                        "description": "Glob pattern for filtering (for list/find operations)"
                    },
                    "content": {
                        "type": "string",
                        "description": "Content to write (for write operation)"
                    },
                    "destination": {
                        "type": "string",
                        "description": "Destination path (for copy/move operations)"
                    },
                    "mkdir": {
                        "type": "boolean",
                        "description": "Create directory instead of file (for create operation)",
                        "default": false
                    },
                    "start_line": {
                        "type": "integer",
                        "description": "Start line number for read operation (1-based, inclusive)"
                    },
                    "end_line": {
                        "type": "integer",
                        "description": "End line number for read operation (1-based, inclusive)"
                    },
                    "query": {
                        "type": "string",
                        "description": "Search query for searching file contents (for search operation)"
                    }
                },
                "required": ["operation", "path"]
            }
        },
        "scrape": {
            "enabled": true,
            "description": "Scrape webpage content using a local Firecrawl instance.",
            "implementation": "scrape_tool.py",
            "parameters": {
                "type": "object",
                "properties": {
                    "url": {
                        "type": "string",
                        "description": "The webpage URL to scrape (must start with http:// or https://)"
                    },
                    "format": {
                        "type": "string",
                        "description": "The desired format for the scraped content",
                        "enum": [
                            "markdown",
                            "html",
                            "links",
                            "metadata"
                        ],
                        "default": "markdown"
                    },
                    "wait_for": {
                        "type": "integer",
                        "description": "The time to wait for page load in milliseconds",
                        "default": 5000,
                        "minimum": 0
                    },
                    "block_media": {
                        "type": "boolean",
                        "description": "Whether to block loading of media resources",
                        "default": true
                    }
                },
                "required": [
                    "url"
                ]
            }
        }
    }
}