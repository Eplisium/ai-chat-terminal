{
    "tools": {
        "search": {
            "enabled": true,
            "description": "Execute search tool to perform web searches and return results.",
            "implementation": "search_tool.py",
            "parameters": {
                "type": "object",
                "properties": {
                    "query": {
                        "type": "string",
                        "description": "Search query to execute"
                    },
                    "num_results": {
                        "type": "integer",
                        "description": "Number of results to return",
                        "default": 5
                    }
                },
                "required": ["query"]
            }
        },
        "calculate": {
            "enabled": true,
            "description": "Execute calculation tool to evaluate mathematical expressions safely.",
            "implementation": "calculate_tool.py",
            "parameters": {
                "type": "object",
                "properties": {
                    "expression": {
                        "type": "string",
                        "description": "Mathematical expression to evaluate (supports basic arithmetic operations)"
                    }
                },
                "required": ["expression"]
            }
        },
        "time": {
            "enabled": true,
            "description": "Execute time tool to get current time in specified timezone.",
            "implementation": "time_tool.py",
            "parameters": {
                "type": "object",
                "properties": {
                    "timezone": {
                        "type": "string",
                        "description": "Timezone name (e.g., 'America/New_York', 'Europe/London')",
                        "default": "UTC"
                    }
                },
                "required": []
            }
        },
        "weather": {
            "enabled": true,
            "description": "Execute weather tool to get current weather information for a location.",
            "implementation": "weather_tool.py",
            "parameters": {
                "type": "object",
                "properties": {
                    "location": {
                        "type": "string",
                        "description": "Location to get weather for"
                    },
                    "units": {
                        "type": "string",
                        "description": "Units system (metric or imperial)",
                        "enum": ["metric", "imperial"],
                        "default": "metric"
                    }
                },
                "required": ["location"]
            }
        },
        "system": {
            "enabled": true,
            "description": "Execute system tool to get system information like OS, memory, disk, or CPU details.",
            "implementation": "system_tool.py",
            "parameters": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "description": "Type of information to retrieve",
                        "enum": ["os", "memory", "disk", "cpu", "all"],
                        "default": "all"
                    },
                    "path": {
                        "type": "string",
                        "description": "Specific path for disk information (optional)"
                    }
                },
                "required": []
            }
        },
        "fileops": {
            "enabled": true,
            "description": "Execute file operations tool for file system tasks like read, write, copy, move, etc.",
            "implementation": "fileops_tool.py",
            "parameters": {
                "type": "object",
                "properties": {
                    "operation": {
                        "type": "string",
                        "description": "Operation to perform",
                        "enum": ["info", "list", "exists", "find", "size", "create", "delete", "copy", "move", "write", "read"]
                    },
                    "path": {
                        "type": "string",
                        "description": "Target path"
                    },
                    "detailed": {
                        "type": "boolean",
                        "description": "Get detailed information",
                        "default": false
                    },
                    "recursive": {
                        "type": "boolean",
                        "description": "List subdirectories recursively",
                        "default": false
                    },
                    "pattern": {
                        "type": "string",
                        "description": "Glob pattern for filtering"
                    },
                    "content": {
                        "type": "string",
                        "description": "Content to write"
                    },
                    "destination": {
                        "type": "string",
                        "description": "Destination path"
                    },
                    "mkdir": {
                        "type": "boolean",
                        "description": "Create directory instead of file",
                        "default": false
                    },
                    "start_line": {
                        "type": "integer",
                        "description": "Start line number for read operation",
                        "minimum": 1
                    },
                    "end_line": {
                        "type": "integer",
                        "description": "End line number for read operation",
                        "minimum": 1
                    }
                },
                "required": ["operation", "path"]
            }
        },
        "scrape": {
            "enabled": true,
            "description": "Scrape a webpage using local Firecrawl instance and return the content in specified format.",
            "implementation": "scrape_tool.py",
            "parameters": {
                "type": "object",
                "properties": {
                    "url": {
                        "type": "string",
                        "description": "The URL to scrape (must start with http:// or https://)"
                    },
                    "format": {
                        "type": "string",
                        "description": "Content format to return",
                        "enum": ["markdown", "html", "links", "metadata"],
                        "default": "markdown"
                    },
                    "wait_for": {
                        "type": "integer",
                        "description": "Time to wait for page load in milliseconds",
                        "default": 5000,
                        "minimum": 0
                    },
                    "block_media": {
                        "type": "boolean",
                        "description": "Whether to block media loading",
                        "default": true
                    }
                },
                "required": ["url"]
            }
        }
    }
}