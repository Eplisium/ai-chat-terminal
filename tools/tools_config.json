{
    "tools": {
        "search": {
            "enabled": true,
            "description": "Execute search tool",
            "implementation": "search_tool.py",
            "parameters": {
                "type": "object",
                "properties": {},
                "required": []
            }
        },
        "calculate": {
            "enabled": true,
            "description": "Execute calculation tool",
            "implementation": "calculate_tool.py",
            "parameters": {
                "type": "object",
                "properties": {},
                "required": []
            }
        },
        "time": {
            "enabled": true,
            "description": "Execute time tool",
            "implementation": "time_tool.py",
            "parameters": {
                "type": "object",
                "properties": {},
                "required": []
            }
        },
        "weather": {
            "enabled": true,
            "description": "Execute weather tool",
            "implementation": "weather_tool.py",
            "parameters": {
                "type": "object",
                "properties": {},
                "required": []
            }
        },
        "system": {
            "enabled": true,
            "description": "Execute system tool to get system information",
            "implementation": "system_tool.py",
            "parameters": {
                "type": "object",
                "properties": {},
                "required": []
            }
        },
        "fileops": {
            "enabled": true,
            "description": "Execute file operations tool",
            "implementation": "fileops_tool.py",
            "parameters": {
                "type": "object",
                "properties": {},
                "required": []
            }
        },
        "scrape": {
            "enabled": true,
            "description": "Scrape a webpage using local Firecrawl instance",
            "implementation": "scrape_tool.py",
            "parameters": {
                "type": "object",
                "properties": {
                    "url": {
                        "type": "string",
                        "description": "The URL to scrape (must start with http"
                    },
                    "format": {
                        "type": "string",
                        "description": "Content format to return (markdown, html, links, or metadata)"
                    },
                    "wait_for": {
                        "type": "string",
                        "description": "Time to wait for page load in milliseconds (default"
                    },
                    "block_media": {
                        "type": "string",
                        "description": "Whether to block media loading (default"
                    }
                },
                "required": [
                    "url",
                    "format",
                    "wait_for",
                    "block_media"
                ]
            }
        }
    }
}