{
    "tools": {
        "search": {
            "enabled": false,
            "description": "Perform web searches and return formatted results.",
            "implementation": "search_tool.py",
            "parameters": {
                "type": "object",
                "properties": {
                    "query": {
                        "type": "string",
                        "description": "The search query to execute"
                    },
                    "num_results": {
                        "type": "integer",
                        "description": "Number of results to return (optional)",
                        "default": 5,
                        "minimum": 1
                    }
                },
                "required": [
                    "query"
                ]
            }
        },
        "calculate": {
            "enabled": false,
            "description": "Evaluate mathematical expressions safely using supported arithmetic operations.",
            "implementation": "calculate_tool.py",
            "parameters": {
                "type": "object",
                "properties": {
                    "expression": {
                        "type": "string",
                        "description": "The mathematical expression to evaluate (supports +, -, *, /, ** operators)"
                    }
                },
                "required": [
                    "expression"
                ]
            }
        },
        "time": {
            "enabled": false,
            "description": "Get current time and date information for a specified timezone.",
            "implementation": "time_tool.py",
            "parameters": {
                "type": "object",
                "properties": {
                    "timezone": {
                        "type": "string",
                        "description": "The timezone name from pytz database (e.g., 'America/New_York', 'Europe/London')",
                        "default": "UTC"
                    }
                },
                "required": []
            }
        },
        "weather": {
            "enabled": false,
            "description": "Get current weather information for a specified location.",
            "implementation": "weather_tool.py",
            "parameters": {
                "type": "object",
                "properties": {
                    "location": {
                        "type": "string",
                        "description": "The location to get weather information for"
                    },
                    "units": {
                        "type": "string",
                        "description": "The units system for temperature and measurements",
                        "enum": [
                            "metric",
                            "imperial"
                        ],
                        "default": "metric"
                    }
                },
                "required": [
                    "location"
                ]
            }
        },
        "system": {
            "enabled": true,
            "description": "Get comprehensive system information including OS, memory, storage, CPU, GPU, network, processes, and services details.",
            "implementation": "system_tool.py",
            "parameters": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "description": "The type of system information to retrieve",
                        "enum": [
                            "os",
                            "memory",
                            "disk",
                            "cpu",
                            "gpu",
                            "network",
                            "processes",
                            "services",
                            "storage",
                            "all"
                        ],
                        "default": "all"
                    },
                    "path": {
                        "type": "string",
                        "description": "The specific path to get disk information for (only used with type='disk')"
                    }
                },
                "required": []
            }
        },
        "scrape": {
            "enabled": false,
            "description": "Use local Firecrawl instance for web scraping, crawling, mapping and data extraction.",
            "implementation": "scrape_tool.py",
            "parameters": {
                "type": "object",
                "properties": {
                    "url": {
                        "type": "string",
                        "description": "The URL to process (must start with http:// or https://)"
                    },
                    "mode": {
                        "type": "string",
                        "description": "The operation mode to use",
                        "enum": [
                            "scrape",
                            "crawl",
                            "map",
                            "extract",
                            "sitemap"
                        ],
                        "default": "scrape"
                    },
                    "format": {
                        "type": "string",
                        "description": "Content format for scrape/crawl modes",
                        "enum": [
                            "markdown",
                            "html",
                            "links",
                            "metadata"
                        ],
                        "default": "markdown"
                    },
                    "max_pages": {
                        "type": "integer",
                        "description": "Maximum pages to crawl (only for crawl mode)",
                        "default": 10,
                        "minimum": 1
                    },
                    "max_depth": {
                        "type": "integer",
                        "description": "Maximum depth for crawl/map/sitemap operations",
                        "default": 2,
                        "minimum": 1
                    },
                    "wait_for": {
                        "type": "integer",
                        "description": "Time to wait for page load in milliseconds",
                        "default": 5000,
                        "minimum": 0
                    },
                    "block_media": {
                        "type": "boolean",
                        "description": "Whether to block loading of media resources",
                        "default": true
                    },
                    "follow_pattern": {
                        "type": "string",
                        "description": "Regex pattern for URLs to follow during operations"
                    },
                    "extract_rules": {
                        "type": "array",
                        "description": "List of extraction rules for data extraction mode",
                        "items": {
                            "type": "object",
                            "properties": {
                                "selector": {
                                    "type": "string",
                                    "description": "CSS selector for the element to extract"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name for the extracted data field"
                                }
                            },
                            "required": [
                                "selector",
                                "name"
                            ]
                        }
                    },
                    "include_assets": {
                        "type": "boolean",
                        "description": "Include asset files in site mapping (only for map mode)",
                        "default": false
                    },
                    "follow_sitemap": {
                        "type": "boolean",
                        "description": "Whether to follow sitemap for additional URLs",
                        "default": false
                    },
                    "scrape_discovered_links": {
                        "type": "boolean",
                        "description": "Whether to scrape content from discovered links in scrape mode",
                        "default": false
                    },
                    "max_links": {
                        "type": "integer",
                        "description": "Maximum number of discovered links to scrape in scrape mode",
                        "default": 10,
                        "minimum": 1,
                        "maximum": 100
                    },
                    "max_workers": {
                        "type": "integer",
                        "description": "Maximum number of parallel workers for link scraping in scrape mode",
                        "default": 5,
                        "minimum": 1,
                        "maximum": 20
                    },
                    "sitemap_options": {
                        "type": "object",
                        "description": "Additional options for sitemap handling",
                        "properties": {
                            "maxDepth": {
                                "type": "integer",
                                "description": "Maximum depth for sitemap traversal",
                                "default": 2,
                                "minimum": 1
                            },
                            "validateUrls": {
                                "type": "boolean",
                                "description": "Whether to validate URLs found in sitemap",
                                "default": true
                            },
                            "followSitemapIndex": {
                                "type": "boolean",
                                "description": "Whether to follow sitemap index files",
                                "default": true
                            },
                            "excludePatterns": {
                                "type": "array",
                                "description": "Patterns to exclude from sitemap processing",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "includePatterns": {
                                "type": "array",
                                "description": "Patterns to include in sitemap processing",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "maxRetries": {
                                "type": "integer",
                                "description": "Maximum number of retries for failed requests",
                                "default": 3,
                                "minimum": 0
                            },
                            "retryDelay": {
                                "type": "integer",
                                "description": "Delay between retries in milliseconds",
                                "default": 1000,
                                "minimum": 0
                            }
                        }
                    }
                },
                "required": [
                    "url"
                ]
            }
        },
        "filesystem": {
            "enabled": false,
            "description": "Perform file system operations like searching and reading files across the system.",
            "implementation": "filesystem_tool.py",
            "parameters": {
                "type": "object",
                "properties": {
                    "operation": {
                        "type": "string",
                        "description": "The operation to perform",
                        "enum": [
                            "search",
                            "read",
                            "info",
                            "list",
                            "user"
                        ],
                        "default": "search"
                    },
                    "path": {
                        "type": "string",
                        "description": "Target path for the operation (not required for 'user' operation)"
                    },
                    "pattern": {
                        "type": "string",
                        "description": "File pattern for search/list operations (e.g., '*.txt', '*.py')",
                        "default": "*"
                    },
                    "content": {
                        "type": "string",
                        "description": "Text to search for within files"
                    },
                    "max_depth": {
                        "type": "integer",
                        "description": "Maximum directory depth for search",
                        "default": 10,
                        "minimum": 1
                    },
                    "exclude_dirs": {
                        "type": "array",
                        "description": "List of directory names to exclude from search",
                        "items": {
                            "type": "string"
                        },
                        "default": [
                            ".git",
                            "node_modules",
                            "__pycache__",
                            "venv",
                            ".env"
                        ]
                    },
                    "include_hidden": {
                        "type": "boolean",
                        "description": "Whether to include hidden files and directories",
                        "default": false
                    },
                    "include_preview": {
                        "type": "boolean",
                        "description": "Whether to include content preview in file info",
                        "default": false
                    },
                    "start_line": {
                        "type": "integer",
                        "description": "Starting line number for read operation (1-based, inclusive)",
                        "minimum": 1
                    },
                    "end_line": {
                        "type": "integer",
                        "description": "Ending line number for read operation (1-based, inclusive)",
                        "minimum": 1
                    }
                },
                "required": [
                    "operation"
                ]
            }
        }
    }
}